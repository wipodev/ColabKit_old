name: Build and Release

on:
  push:
    tags:
      - v*

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel twine
          pip install -r requirements.txt

      - name: Build the wheel
        run: python setup.py sdist bdist_wheel

      - name: Ver Referencia de Git
        run: echo 'Referencia de Git ${{ GITHUB_REF }} | otra forma ${{ steps.parse-branch.outputs.branch }}'
      - name: Obtener Nombre de Rama
        run: |
          echo "Nombre de Rama ${GITHUB_REF/refs\/heads\//} | otra forma ${{ github.ref }}"
          echo "nueva opcion ${{ github.ref }} | sed 's/refs\/heads\///'"

      - name: Publish to Test PyPI (dev branch)
        if: github.ref == 'refs/heads/dev'
        run: twine upload --repository testpypi dist/*.whl --username __token__ --password ${{ secrets.TEST_PYPI_API_TOKEN }}

      - name: Publish to PyPI (main branch)
        if: github.ref == 'refs/heads/main'
        run: twine upload dist/*.whl --username __token__ --password ${{ secrets.PYPI_API_TOKEN }}

  release:
    name: Release
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v2
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: "dist/*"
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
